{"version":3,"sources":["recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.scss"],"names":["Recipe","title","calories","image","ingredients","className","style","recipe","src","alt","img","map","ingredient","text","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","console","log","onSubmit","e","preventDefault","type","value","onChange","target","placeholder","label","displayType","thousandSeparator","decimalScale","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"mQAiBeA,EAfA,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,YACrC,OACI,sBAAKC,UAAWC,IAAMC,OAAtB,UACI,6BAAKN,IACL,8BAAIC,EAAJ,WACA,qBAAKM,IAAKL,EAAOM,IAAI,GAAGJ,UAAWC,IAAMI,MACzC,8BACKN,EAAYO,KAAI,SAAAC,GAAU,OACvB,6BAAKA,EAAWC,gB,eCiDrBC,MArDf,WACE,IADa,EAIiBC,mBAAS,IAJ1B,mBAINC,EAJM,KAIGC,EAJH,OAKeF,mBAAS,IALxB,mBAKNG,EALM,KAKEC,EALF,OAMaJ,mBAAS,WANtB,mBAMNK,EANM,KAMCC,EAND,OAOeN,mBAAS,SAPxB,6BASbO,qBAAW,WACTC,MACC,CAACH,IAEJ,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,mCAAD,OAAoCL,EAApC,mBAbf,WAae,oBAZd,qCAWG,cACXM,EADW,gBAEEA,EAASC,OAFX,OAEXC,EAFW,OAGjBX,EAAWW,EAAKC,MAChBC,QAAQC,IAAIH,EAAKC,MAJA,2CAAH,qDAgBhB,OACE,sBAAKxB,UAAU,MAAf,UACE,uBAAM2B,SAPQ,SAAAC,GAChBA,EAAEC,iBACFb,EAASH,GACTC,EAAU,KAImBd,UAAU,cAArC,UACA,iEACE,uBAAOA,UAAU,aAAa8B,KAAK,OAAOC,MAAOlB,EAAQmB,SAb1C,SAAAJ,GACnBd,EAAUc,EAAEK,OAAOF,QAYoEG,YAAY,+BAC/F,wBAAQlC,UAAU,gBAAgB8B,KAAK,SAAvC,uBAEF,qBAAK9B,UAAU,cAAf,SACCW,EAAQL,KAAI,SAAAJ,GAAM,OACjB,cAAC,EAAD,CAEEN,MAASM,EAAOA,OAAOiC,MACvBtC,SACA,cAAC,IAAD,CAAckC,MAAO7B,EAAOA,OAAOL,SAAUuC,YAAa,OAAQC,mBAAmB,EAAOC,aAAc,IAE1GxC,MAASI,EAAOA,OAAOJ,MAAOE,UAAU,QACxCD,YAAeG,EAAOA,OAAOH,aANtBG,EAAOA,OAAOiC,gBCjChBI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,0B","file":"static/js/main.46fe95e3.chunk.js","sourcesContent":["import React from 'react';\r\nimport style from './recipe.module.scss';\r\nconst Recipe = ({title, calories, image, ingredients}) => {\r\n    return (\r\n        <div className={style.recipe}>\r\n            <h1>{title}</h1>\r\n            <p>{calories} kCal</p>\r\n            <img src={image} alt=\"\" className={style.img}/>\r\n            <div>\r\n                {ingredients.map(ingredient => (\r\n                    <li>{ingredient.text}</li>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Recipe;","import React, {useEffect, useState} from \"react\";\r\nimport Recipe from './recipe';\r\nimport './App.scss';\r\nimport NumberFormat from 'react-number-format';\r\nimport Modal from './Modal'\r\n\r\nfunction App() {\r\n  const APP_ID = 'eb530fce'\r\n  const APP_KEY = '730323b6b9855b44a7d0b986fc21b352'\r\n\r\n  const [recipes, setRecipes] = useState([]);\r\n  const [search, setSearch] = useState('');\r\n  const [query, setQuery] = useState('chicken');\r\n  const [isOpen, setIsOpen] = useState('false')\r\n\r\n  useEffect( () => {\r\n    getRecipes()\r\n  }, [query]);\r\n\r\n  const getRecipes = async () => {\r\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\r\n    const data = await response.json();\r\n    setRecipes(data.hits);\r\n    console.log(data.hits);\r\n  }\r\n\r\n  const updateSearch = e => {\r\n    setSearch(e.target.value);\r\n  }\r\n\r\n  const getSearch = e => {\r\n    e.preventDefault();\r\n    setQuery(search);\r\n    setSearch('');\r\n  }\r\n  return (\r\n    <div className='App'>\r\n      <form onSubmit={getSearch} className=\"search-form\">\r\n      <h1>Search for your favourite food!</h1>\r\n        <input className=\"search-bar\" type=\"text\" value={search} onChange = {updateSearch} placeholder='Whats your favourite food?'/>\r\n        <button className=\"search-button\" type=\"submit\">Search</button>\r\n      </form>\r\n      <div className='recipe-grid'>\r\n      {recipes.map(recipe => (\r\n        <Recipe \r\n          key = {recipe.recipe.label}\r\n          title = {recipe.recipe.label} \r\n          calories = {\r\n          <NumberFormat value={recipe.recipe.calories} displayType={'text'} thousandSeparator={false} decimalScale={0} />\r\n        }\r\n          image = {recipe.recipe.image} className='image'\r\n          ingredients = {recipe.recipe.ingredients}\r\n          />\r\n      ))} \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__28FtF\"};"],"sourceRoot":""}